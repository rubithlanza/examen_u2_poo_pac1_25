// <auto-generated />
using System;
using ExamenPooUnidad2.API.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamenPooUnidad2.API.Migrations
{
    [DbContext(typeof(PagoPlanillasDbContext))]
    [Migration("20250315034434_CorrecionEmpleados")]
    partial class CorrecionEmpleados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ExamenPooUnidad2.API.DataBase.Entities.DetallePlanillaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<decimal>("Bonificaciones")
                        .HasColumnType("TEXT")
                        .HasColumnName("bonificaciones");

                    b.Property<string>("Comentarios")
                        .HasColumnType("TEXT")
                        .HasColumnName("comentarios");

                    b.Property<decimal>("Deduciones")
                        .HasColumnType("TEXT")
                        .HasColumnName("deduciones");

                    b.Property<decimal>("HorasExtras")
                        .HasColumnType("TEXT")
                        .HasColumnName("horas_extras");

                    b.Property<decimal>("MontoHorasExtras")
                        .HasColumnType("TEXT")
                        .HasColumnName("monto_horas_extras");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("TEXT")
                        .HasColumnName("salario_base");

                    b.Property<decimal>("SalarioNeto")
                        .HasColumnType("TEXT")
                        .HasColumnName("salario_neto");

                    b.Property<Guid?>("empleado_id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("planilla_id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("empleado_id");

                    b.HasIndex("planilla_id");

                    b.ToTable("detalle_planilla");
                });

            modelBuilder.Entity("ExamenPooUnidad2.API.DataBase.Entities.EmpleadoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("apellido");

                    b.Property<string>("Departamento")
                        .HasColumnType("TEXT")
                        .HasColumnName("departamento");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("documento");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_contratacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nombre");

                    b.Property<string>("PuestoTrabajo")
                        .HasColumnType("TEXT")
                        .HasColumnName("puesto_trabajo");

                    b.Property<int>("Salario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("salario");

                    b.HasKey("Id");

                    b.ToTable("empleados");
                });

            modelBuilder.Entity("ExamenPooUnidad2.API.DataBase.Entities.PlanillaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_pago");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("periodo");

                    b.HasKey("Id");

                    b.ToTable("planilla");
                });

            modelBuilder.Entity("ExamenPooUnidad2.API.DataBase.Entities.DetallePlanillaEntity", b =>
                {
                    b.HasOne("ExamenPooUnidad2.API.DataBase.Entities.EmpleadoEntity", "Empleado")
                        .WithMany()
                        .HasForeignKey("empleado_id");

                    b.HasOne("ExamenPooUnidad2.API.DataBase.Entities.PlanillaEntity", "Planilla")
                        .WithMany()
                        .HasForeignKey("planilla_id");

                    b.Navigation("Empleado");

                    b.Navigation("Planilla");
                });
#pragma warning restore 612, 618
        }
    }
}
